name: ebook
on:
  repository_dispatch:
    types: [ebook]
jobs:
  macos:
    runs-on: macos-13
    steps:
      - id: variables
        name: set variables
        run: |
          build_id="${{ github.event.client_payload.uuid }}"
          echo "::set-output name=BUILD_ID::$build_id"
          type="${{ github.event.client_payload.type }}"
          echo "::set-output name=TYPE::$type"
      - name: download fonts
        run: |
          curl -OL "${{ secrets.CLOUDFRONT }}/fonts.zip"
          unzip fonts.zip
      - name: install fonts
        run: |
          chmod -R +x "fonts/"
          sudo cp -a "fonts/." "/Library/Fonts"
      - name: download & install sketch
        run: |
          curl -OL "${{ secrets.CLOUDFRONT }}/sketch.zip"
          unzip sketch.zip
      - name: download & unzip ebook
        run: |
          curl -OL "${{ secrets.CLOUDFRONT }}/books/${{ steps.variables.outputs.BUILD_ID }}.zip"
          unzip "${{ steps.variables.outputs.BUILD_ID }}.zip" -d "${{ steps.variables.outputs.BUILD_ID }}"
      - name: export into pdfs
        run: |
          cd "${{ steps.variables.outputs.BUILD_ID }}"
          for i in `find "." -name "*.sketch" -type f`;
          do
            filename=${i/.\//}
            filename=${filename%".sketch"}
            ./../Sketch.app/Contents/Resources/sketchtool/bin/sketchtool export pages "$i" --output=$(dirname "${i}") --formats=pdf --overwriting=YES
            mv "Page 1.pdf" "${filename}.pdf"
          done
      - name: merge into pdf
        run: |
          cd "${{ steps.variables.outputs.BUILD_ID }}"
          rm -rf Symbols.pdf
          "/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py" --output ./../book.pdf *.pdf
      - name: upload s3
        run: |
          aws configure set aws_access_key_id "${{ secrets.S3_ACCESS_KEY }}"
          aws configure set aws_secret_access_key "${{ secrets.S3_SECRET_KEY }}"
          aws configure set region "eu-west-2"
          aws s3 cp book.pdf "${{ secrets.S3_FOLDER }}books/${{ steps.variables.outputs.BUILD_ID }}.pdf"
      - name: webhook
        run: |
          curl -X POST "${{ secrets.ENDPOINT }}" -H 'Content-Type: application/json' -d '{"uuid":"${{ steps.variables.outputs.BUILD_ID }}", "type":"${{ steps.variables.outputs.TYPE }}"}'
